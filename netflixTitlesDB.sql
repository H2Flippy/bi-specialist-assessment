-- MySQL Script generated by MySQL Workbench
-- Sun Jul  4 16:28:23 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema netflixTitlesDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `netflixTitlesDB` ;

-- -----------------------------------------------------
-- Schema netflixTitlesDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `netflixTitlesDB` DEFAULT CHARACTER SET utf8 ;
USE `netflixTitlesDB` ;

-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`show_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`show_type` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`show_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descr` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `show_type_id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `descr_UNIQUE` (`descr` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`ratings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`ratings` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`ratings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descr` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ratings_id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `descr_UNIQUE` (`descr` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`shows`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`shows` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`shows` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descr` LONGTEXT NOT NULL,
  `release_year` VARCHAR(45) NOT NULL,
  `date_added` DATE NULL,
  `title` VARCHAR(45) NOT NULL,
  `duration_minutes` INT NULL,
  `duration_seasons` INT NULL,
  `show_type_id` INT NOT NULL,
  `ratings_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `show_id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_netflix_titles_show_type_idx` (`show_type_id` ASC) VISIBLE,
  INDEX `fk_netflix_titles_ratings1_idx` (`ratings_id` ASC) VISIBLE,
  CONSTRAINT `fk_netflix_titles_show_type`
    FOREIGN KEY (`show_type_id`)
    REFERENCES `netflixTitlesDB`.`show_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_netflix_titles_ratings1`
    FOREIGN KEY (`ratings_id`)
    REFERENCES `netflixTitlesDB`.`ratings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`director`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`director` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`director` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `director_id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `full_name_UNIQUE` (`full_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`show_derictors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`show_derictors` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`show_derictors` (
  `director_id` INT NOT NULL,
  `show_id` INT NOT NULL,
  PRIMARY KEY (`director_id`, `show_id`),
  INDEX `fk_table1_netflix_titles1_idx` (`show_id` ASC) VISIBLE,
  CONSTRAINT `fk_table1_director1`
    FOREIGN KEY (`director_id`)
    REFERENCES `netflixTitlesDB`.`director` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_netflix_titles1`
    FOREIGN KEY (`show_id`)
    REFERENCES `netflixTitlesDB`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`countries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`countries` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`countries` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `countries_id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`show_countries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`show_countries` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`show_countries` (
  `countries_id` INT NOT NULL,
  `show_id` INT NOT NULL,
  PRIMARY KEY (`countries_id`, `show_id`),
  INDEX `fk_showContries_netflix_titles1_idx` (`show_id` ASC) VISIBLE,
  CONSTRAINT `fk_showContries_countries1`
    FOREIGN KEY (`countries_id`)
    REFERENCES `netflixTitlesDB`.`countries` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_showContries_netflix_titles1`
    FOREIGN KEY (`show_id`)
    REFERENCES `netflixTitlesDB`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`cast`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`cast` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`cast` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cast_id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `full_name_UNIQUE` (`full_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`show_cast`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`show_cast` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`show_cast` (
  `cast_id` INT NOT NULL,
  `show_id` INT NOT NULL,
  PRIMARY KEY (`cast_id`, `show_id`),
  INDEX `fk_show_cast_netflix_titles1_idx` (`show_id` ASC) VISIBLE,
  CONSTRAINT `fk_show_cast_cast1`
    FOREIGN KEY (`cast_id`)
    REFERENCES `netflixTitlesDB`.`cast` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_show_cast_netflix_titles1`
    FOREIGN KEY (`show_id`)
    REFERENCES `netflixTitlesDB`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`categories` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descr` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `catagories_id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `descr_UNIQUE` (`descr` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `netflixTitlesDB`.`show_catagory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `netflixTitlesDB`.`show_catagory` ;

CREATE TABLE IF NOT EXISTS `netflixTitlesDB`.`show_catagory` (
  `catagories_id` INT NOT NULL,
  `show_id` INT NOT NULL,
  PRIMARY KEY (`catagories_id`, `show_id`),
  INDEX `fk_show_catagory_netflix_titles1_idx` (`show_id` ASC) VISIBLE,
  CONSTRAINT `fk_show_catagory_catagories1`
    FOREIGN KEY (`catagories_id`)
    REFERENCES `netflixTitlesDB`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_show_catagory_netflix_titles1`
    FOREIGN KEY (`show_id`)
    REFERENCES `netflixTitlesDB`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
